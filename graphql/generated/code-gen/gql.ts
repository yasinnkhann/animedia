/* eslint-disable */
import * as types from './graphql';
import { TypedDocumentNode as DocumentNode } from '@graphql-typed-document-node/core';

/**
 * Map of all GraphQL operations in the project.
 *
 * This map has several performance disadvantages:
 * 1. It is not tree-shakeable, so it will include all operations in the project.
 * 2. It is not minifiable, so the string of a GraphQL query will be multiple times inside the bundle.
 * 3. It does not support dead code elimination, so it will add unused operations.
 *
 * Therefore it is highly recommended to use the babel or swc plugin for production.
 */
const documents = {
    "\n\tfragment MovieResult on MovieResult {\n\t\tadult\n\t\tbackdrop_path\n\t\tgenre_ids\n\t\tid\n\t\toriginal_language\n\t\toriginal_title\n\t\toverview\n\t\tpopularity\n\t\tposter_path\n\t\trelease_date\n\t\ttitle\n\t\tvideo\n\t\tvote_average\n\t\tvote_count\n\t}\n": types.MovieResultFragmentDoc,
    "\n\tfragment ShowResult on ShowResult {\n\t\tbackdrop_path\n\t\tfirst_air_date\n\t\tgenre_ids\n\t\tid\n\t\tname\n\t\torigin_country\n\t\toriginal_language\n\t\toriginal_name\n\t\toverview\n\t\tpopularity\n\t\tposter_path\n\t\tvote_average\n\t\tvote_count\n\t}\n": types.ShowResultFragmentDoc,
    "\n\tmutation AddedMovie(\n\t\t$movieId: ID!\n\t\t$movieName: String!\n\t\t$watchStatus: WatchStatusTypes!\n\t) {\n\t\taddMovie(\n\t\t\tmovieId: $movieId\n\t\t\tmovieName: $movieName\n\t\t\twatchStatus: $watchStatus\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n": types.AddedMovieDocument,
    "\n\tmutation UpdatedMovie(\n\t\t$movieId: ID!\n\t\t$watchStatus: WatchStatusTypes!\n\t\t$movieRating: Int\n\t) {\n\t\tupdateMovie(\n\t\t\tmovieId: $movieId\n\t\t\twatchStatus: $watchStatus\n\t\t\tmovieRating: $movieRating\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n": types.UpdatedMovieDocument,
    "\n\tmutation DeletedMovie($movieId: ID!) {\n\t\tdeleteMovie(movieId: $movieId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n": types.DeletedMovieDocument,
    "\n\tmutation AddedShow(\n\t\t$showId: ID!\n\t\t$showName: String!\n\t\t$watchStatus: WatchStatusTypes!\n\t\t$currentEpisode: Int\n\t) {\n\t\taddShow(\n\t\t\tshowId: $showId\n\t\t\tshowName: $showName\n\t\t\twatchStatus: $watchStatus\n\t\t\tcurrentEpisode: $currentEpisode\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n": types.AddedShowDocument,
    "\n\tmutation UpdatedShow(\n\t\t$showId: ID!\n\t\t$watchStatus: WatchStatusTypes!\n\t\t$showRating: Int\n\t\t$currentEpisode: Int\n\t) {\n\t\tupdateShow(\n\t\t\tshowId: $showId\n\t\t\twatchStatus: $watchStatus\n\t\t\tshowRating: $showRating\n\t\t\tcurrentEpisode: $currentEpisode\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n": types.UpdatedShowDocument,
    "\n\tmutation DeletedShow($showId: ID!) {\n\t\tdeleteShow(showId: $showId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n": types.DeletedShowDocument,
    "\n\tmutation VerifyUserEmail($userId: ID!) {\n\t\tverifyUserEmail(userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\tuserId\n\t\t}\n\t}\n": types.VerifyUserEmailDocument,
    "\n\tmutation SendVerificationEmail($userId: ID!) {\n\t\tsendVerificationEmail(userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n": types.SendVerificationEmailDocument,
    "\n\tmutation RegisterUser($name: String!, $email: String!, $password: String!) {\n\t\tregisterUser(name: $name, email: $email, password: $password) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\tcreatedUser {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\temail\n\t\t\t\tpassword\n\t\t\t\timage\n\t\t\t\tcreated_at\n\t\t\t\temailVerified\n\t\t\t\tmovies {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tstatus\n\t\t\t\t\trating\n\t\t\t\t}\n\t\t\t\tshows {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tstatus\n\t\t\t\t\trating\n\t\t\t\t\tcurrent_episode\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n": types.RegisterUserDocument,
    "\n\tmutation SendForgotPasswordEmail($email: String!) {\n\t\tsendForgotPasswordEmail(email: $email) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n": types.SendForgotPasswordEmailDocument,
    "\n\tmutation ChangePassword($userId: ID!, $newPassword: String!) {\n\t\tchangePassword(userId: $userId, newPassword: $newPassword) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n": types.ChangePasswordDocument,
    "\n\tquery PopularMovies($page: Int) {\n\t\tpopularMovies(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.PopularMoviesDocument,
    "\n\tquery SearchedMovies($q: String!, $page: Int) {\n\t\tsearchedMovies(q: $q, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.SearchedMoviesDocument,
    "\n\tquery MovieDetails($movieDetailsId: ID!) {\n\t\tmovieDetails(movieDetailsId: $movieDetailsId) {\n\t\t\tadult\n\t\t\tbackdrop_path\n\t\t\tgenres {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\thomepage\n\t\t\tid\n\t\t\timdb_id\n\t\t\toriginal_language\n\t\t\toriginal_title\n\t\t\toverview\n\t\t\tpopularity\n\t\t\tposter_path\n\t\t\tproduction_companies {\n\t\t\t\tid\n\t\t\t\tlogo_path\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t}\n\t\t\tproduction_countries {\n\t\t\t\tiso_3166_1\n\t\t\t\tname\n\t\t\t}\n\t\t\trelease_date\n\t\t\trevenue\n\t\t\truntime\n\t\t\tspoken_languages {\n\t\t\t\tenglish_name\n\t\t\t\tiso_639_1\n\t\t\t\tname\n\t\t\t}\n\t\t\tstatus\n\t\t\ttagline\n\t\t\ttitle\n\t\t\tvideo\n\t\t\tvote_average\n\t\t\tvote_count\n\t\t}\n\t}\n": types.MovieDetailsDocument,
    "\n\tquery PopularAnimeMovies($page: Int) {\n\t\tpopularAnimeMovies(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.PopularAnimeMoviesDocument,
    "\n\tquery TrendingMovies($timeWindow: TimeWindowTypes!, $page: Int) {\n\t\ttrendingMovies(timeWindow: $timeWindow, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.TrendingMoviesDocument,
    "\n\tquery TopRatedMovies($page: Int) {\n\t\ttopRatedMovies(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.TopRatedMoviesDocument,
    "\n\tquery RecommendedMovies($recommendedMoviesId: ID!, $page: Int) {\n\t\trecommendedMovies(recommendedMoviesId: $recommendedMoviesId, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.RecommendedMoviesDocument,
    "\n\tquery MovieReviews($movieReviewsId: ID!, $page: Int) {\n\t\tmovieReviews(id: $movieReviewsId, page: $page) {\n\t\t\tid\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tauthor\n\t\t\t\tauthor_details {\n\t\t\t\t\tname\n\t\t\t\t\tusername\n\t\t\t\t\tavatar_path\n\t\t\t\t\trating\n\t\t\t\t}\n\t\t\t\tcontent\n\t\t\t\tcreated_at\n\t\t\t\tid\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t}\n": types.MovieReviewsDocument,
    "\n\tquery MoviesInTheatres($page: Int) {\n\t\tmoviesInTheatres(page: $page) {\n\t\t\tdates {\n\t\t\t\tmaximum\n\t\t\t\tminimum\n\t\t\t}\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.MoviesInTheatresDocument,
    "\n\tquery PopularMoviesByGenre($page: Int, $genre: MovieGenreTypes!) {\n\t\tpopularMoviesByGenre(page: $page, genre: $genre) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.PopularMoviesByGenreDocument,
    "\n\tquery TopRatedMoviesByGenre($page: Int, $genre: MovieGenreTypes!) {\n\t\ttopRatedMoviesByGenre(page: $page, genre: $genre) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.TopRatedMoviesByGenreDocument,
    "\n\tquery PopularShows($page: Int) {\n\t\tpopularShows(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.PopularShowsDocument,
    "\n\tquery SearchedShows($q: String!, $page: Int) {\n\t\tsearchedShows(q: $q, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.SearchedShowsDocument,
    "\n\tquery ShowDetails($showDetailsId: ID!) {\n\t\tshowDetails(showDetailsId: $showDetailsId) {\n\t\t\tadult\n\t\t\tbackdrop_path\n\t\t\tcreated_by {\n\t\t\t\tid\n\t\t\t\tcredit_id\n\t\t\t\tname\n\t\t\t\tgender\n\t\t\t\tprofile_path\n\t\t\t}\n\t\t\tepisode_run_time\n\t\t\tfirst_air_date\n\t\t\tgenres {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\thomepage\n\t\t\tid\n\t\t\tin_production\n\t\t\tlanguages\n\t\t\tlast_air_date\n\t\t\tlast_episode_to_air {\n\t\t\t\tair_date\n\t\t\t\tepisode_number\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\toverview\n\t\t\t\tproduction_code\n\t\t\t\truntime\n\t\t\t\tseason_number\n\t\t\t\tshow_id\n\t\t\t\tstill_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t\tname\n\t\t\tnetworks {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tlogo_path\n\t\t\t\torigin_country\n\t\t\t}\n\t\t\tnumber_of_episodes\n\t\t\tnumber_of_seasons\n\t\t\torigin_country\n\t\t\toriginal_language\n\t\t\toriginal_name\n\t\t\toverview\n\t\t\tpopularity\n\t\t\tposter_path\n\t\t\tproduction_companies {\n\t\t\t\tid\n\t\t\t\tlogo_path\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t}\n\t\t\tproduction_countries {\n\t\t\t\tiso_3166_1\n\t\t\t\tname\n\t\t\t}\n\t\t\tseasons {\n\t\t\t\tair_date\n\t\t\t\tepisode_count\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\toverview\n\t\t\t\tposter_path\n\t\t\t\tseason_number\n\t\t\t}\n\t\t\tspoken_languages {\n\t\t\t\tenglish_name\n\t\t\t\tiso_639_1\n\t\t\t\tname\n\t\t\t}\n\t\t\tstatus\n\t\t\ttagline\n\t\t\ttype\n\t\t\tvote_average\n\t\t\tvote_count\n\t\t\tnext_episode_to_air {\n\t\t\t\tair_date\n\t\t\t\tepisode_number\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\toverview\n\t\t\t\tproduction_code\n\t\t\t\truntime\n\t\t\t\tseason_number\n\t\t\t\tshow_id\n\t\t\t\tstill_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.ShowDetailsDocument,
    "\n\tquery PopularAnimeShows($page: Int) {\n\t\tpopularAnimeShows(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.PopularAnimeShowsDocument,
    "\n\tquery TrendingShows($timeWindow: TimeWindowTypes!, $page: Int) {\n\t\ttrendingShows(timeWindow: $timeWindow, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.TrendingShowsDocument,
    "\n\tquery TopRatedShows($page: Int) {\n\t\ttopRatedShows(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.TopRatedShowsDocument,
    "\n\tquery RecommendedShows($recommendedShowsId: ID!, $page: Int) {\n\t\trecommendedShows(recommendedShowsId: $recommendedShowsId, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.RecommendedShowsDocument,
    "\n\tquery ShowReviews($showReviewsId: ID!, $page: Int) {\n\t\tshowReviews(id: $showReviewsId, page: $page) {\n\t\t\tid\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tauthor\n\t\t\t\tauthor_details {\n\t\t\t\t\tname\n\t\t\t\t\tusername\n\t\t\t\t\tavatar_path\n\t\t\t\t\trating\n\t\t\t\t}\n\t\t\t\tcontent\n\t\t\t\tcreated_at\n\t\t\t\tid\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t}\n": types.ShowReviewsDocument,
    "\n\tquery PopularShowsByGenre($page: Int, $genre: ShowGenreTypes!) {\n\t\tpopularShowsByGenre(page: $page, genre: $genre) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.PopularShowsByGenreDocument,
    "\n\tquery TopRatedShowsByGenre($genre: ShowGenreTypes!, $page: Int) {\n\t\ttopRatedShowsByGenre(genre: $genre, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n": types.TopRatedShowsByGenreDocument,
    "\n\tquery PopularPeople($page: Int) {\n\t\tpopularPeople(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for {\n\t\t\t\t\tadult\n\t\t\t\t\tbackdrop_path\n\t\t\t\t\tgenre_ids\n\t\t\t\t\tid\n\t\t\t\t\tmedia_type\n\t\t\t\t\toriginal_language\n\t\t\t\t\toriginal_title\n\t\t\t\t\toverview\n\t\t\t\t\tposter_path\n\t\t\t\t\trelease_date\n\t\t\t\t\ttitle\n\t\t\t\t\tvideo\n\t\t\t\t\tvote_average\n\t\t\t\t\tvote_count\n\t\t\t\t}\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t}\n\t\t}\n\t}\n": types.PopularPeopleDocument,
    "\n\tquery PersonDetails($personDetailsId: ID!) {\n\t\tpersonDetails(personDetailsId: $personDetailsId) {\n\t\t\tadult\n\t\t\talso_known_as\n\t\t\tbiography\n\t\t\tbirthday\n\t\t\tdeathday\n\t\t\tgender\n\t\t\thomepage\n\t\t\tid\n\t\t\timdb_id\n\t\t\tknown_for_department\n\t\t\tname\n\t\t\tplace_of_birth\n\t\t\tpopularity\n\t\t\tprofile_path\n\t\t}\n\t}\n": types.PersonDetailsDocument,
    "\n\tquery SearchedPeople($q: String!, $page: Int) {\n\t\tsearchedPeople(q: $q, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for {\n\t\t\t\t\tadult\n\t\t\t\t\tbackdrop_path\n\t\t\t\t\tgenre_ids\n\t\t\t\t\tid\n\t\t\t\t\tmedia_type\n\t\t\t\t\toriginal_language\n\t\t\t\t\toriginal_title\n\t\t\t\t\toverview\n\t\t\t\t\tposter_path\n\t\t\t\t\trelease_date\n\t\t\t\t\ttitle\n\t\t\t\t\tvideo\n\t\t\t\t\tvote_average\n\t\t\t\t\tvote_count\n\t\t\t\t}\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t}\n\t\t}\n\t}\n": types.SearchedPeopleDocument,
    "\n\tquery User($userId: ID!) {\n\t\tuser(id: $userId) {\n\t\t\tid\n\t\t\tname\n\t\t\temail\n\t\t\timage\n\t\t\tmovies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tstatus\n\t\t\t\trating\n\t\t\t}\n\t\t\tshows {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tstatus\n\t\t\t\trating\n\t\t\t\tcurrent_episode\n\t\t\t}\n\t\t}\n\t}\n": types.UserDocument,
    "\n\tquery UsersMovie($movieId: String!) {\n\t\tusersMovie(movieId: $movieId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n": types.UsersMovieDocument,
    "\n\tquery UsersMovies {\n\t\tusersMovies {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n": types.UsersMoviesDocument,
    "\n\tquery UsersShow($showId: String!) {\n\t\tusersShow(showId: $showId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n": types.UsersShowDocument,
    "\n\tquery UsersShows {\n\t\tusersShows {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n": types.UsersShowsDocument,
    "\n\tquery PersonsKnownForMovie($personsKnownForMovieResId: ID!) {\n\t\tpersonsKnownForMovie(\n\t\t\tpersonsKnownForMovieResId: $personsKnownForMovieResId\n\t\t) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n": types.PersonsKnownForMovieDocument,
    "\n\tquery PersonsKnownForShow($personsKnownForShowResId: ID!) {\n\t\tpersonsKnownForShow(personsKnownForShowResId: $personsKnownForShowResId) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tfirst_air_date\n\t\t\t\tname\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\tepisode_count\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tfirst_air_date\n\t\t\t\tname\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tepisode_count\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n": types.PersonsKnownForShowDocument,
    "\n\tquery ShowsCastCrew($showId: ID!) {\n\t\tshowsCastCrew(showId: $showId) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n": types.ShowsCastCrewDocument,
    "\n\tquery MoviesCastCrew($movieId: ID!) {\n\t\tmoviesCastCrew(movieId: $movieId) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcast_id\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n": types.MoviesCastCrewDocument,
    "\n\tquery EpisodeDetails($showId: ID!, $seasonNum: Int!, $episodeNum: Int!) {\n\t\tepisodeDetails(\n\t\t\tshowId: $showId\n\t\t\tseasonNum: $seasonNum\n\t\t\tepisodeNum: $episodeNum\n\t\t) {\n\t\t\tair_date\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t\tepisode_number\n\t\t\tguest_stars {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tname\n\t\t\toverview\n\t\t\tid\n\t\t\tproduction_code\n\t\t\truntime\n\t\t\tseason_number\n\t\t\tstill_path\n\t\t\tvote_average\n\t\t\tvote_count\n\t\t}\n\t}\n": types.EpisodeDetailsDocument,
    "\n\tquery CheckEmailVerificationToken($token: String!, $userId: ID!) {\n\t\tcheckEmailVerificationToken(token: $token, userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n": types.CheckEmailVerificationTokenDocument,
    "\n\tquery CheckForgotPasswordToken($token: String!, $userId: ID!) {\n\t\tcheckForgotPasswordToken(token: $token, userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n": types.CheckForgotPasswordTokenDocument,
    "\n\tquery AccountVerified($email: String!) {\n\t\taccountVerified(email: $email) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\tid\n\t\t\temailVerified\n\t\t}\n\t}\n": types.AccountVerifiedDocument,
    "\n\tquery EmailFromRedisToken($token: String!) {\n\t\temailFromRedisToken(token: $token)\n\t}\n": types.EmailFromRedisTokenDocument,
    "\n\tquery SearchGames($q: String!, $limit: Int!, $page: Int!) {\n\t\tsearchGames(q: $q, limit: $limit, page: $page) {\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tid\n\t\t\t\tage_ratings\n\t\t\t\talternative_names\n\t\t\t\tartworks\n\t\t\t\tbundles\n\t\t\t\tcategory\n\t\t\t\tchecksum\n\t\t\t\tcollection\n\t\t\t\tcollections\n\t\t\t\tcover\n\t\t\t\tcoverUrl\n\t\t\t\tcreated_at\n\t\t\t\tdlcs\n\t\t\t\texpanded_games\n\t\t\t\texpansions\n\t\t\t\texternal_games\n\t\t\t\tfirst_release_date\n\t\t\t\tforks\n\t\t\t\tfranchise\n\t\t\t\tfranchises\n\t\t\t\tgame_engines\n\t\t\t\tgame_localizations\n\t\t\t\tgame_modes\n\t\t\t\tgenres\n\t\t\t\thypes\n\t\t\t\tinvolved_companies\n\t\t\t\tkeywords\n\t\t\t\tlanguage_supports\n\t\t\t\tmultiplayer_modes\n\t\t\t\tname\n\t\t\t\tparent_game\n\t\t\t\tplatforms\n\t\t\t\tplayer_perspectives\n\t\t\t\tports\n\t\t\t\trating\n\t\t\t\trating_count\n\t\t\t\trelease_dates\n\t\t\t\tremakes\n\t\t\t\tremasters\n\t\t\t\tscreenshots\n\t\t\t\tsimilar_games\n\t\t\t\tslug\n\t\t\t\tstandalone_expansions\n\t\t\t\tstatus\n\t\t\t\tstoryline\n\t\t\t\tsummary\n\t\t\t\ttags\n\t\t\t\tthemes\n\t\t\t\ttotal_rating\n\t\t\t\ttotal_rating_count\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t\tversion_parent\n\t\t\t\tversion_title\n\t\t\t\tvideos\n\t\t\t\twebsites\n\t\t\t}\n\t\t}\n\t}\n": types.SearchGamesDocument,
    "\n\tquery UsersGames {\n\t\tusersGames {\n\t\t\tid\n\t\t\tname\n\t\t\trating\n\t\t}\n\t}\n": types.UsersGamesDocument,
    "\n\tquery GameDetails($gameDetailsId: ID!) {\n\t\tgameDetails(gameDetailsId: $gameDetailsId) {\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tid\n\t\t\t\tage_ratings\n\t\t\t\talternative_names\n\t\t\t\tartworks\n\t\t\t\tbundles\n\t\t\t\tcategory\n\t\t\t\tchecksum\n\t\t\t\tcollection\n\t\t\t\tcollections\n\t\t\t\tcover\n\t\t\t\tcoverUrl\n\t\t\t\tcreated_at\n\t\t\t\tdlcs\n\t\t\t\texpanded_games\n\t\t\t\texpansions\n\t\t\t\texternal_games\n\t\t\t\tfirst_release_date\n\t\t\t\tforks\n\t\t\t\tfranchise\n\t\t\t\tfranchises\n\t\t\t\tgame_engines\n\t\t\t\tgame_localizations\n\t\t\t\tgame_modes\n\t\t\t\tgenres\n\t\t\t\thypes\n\t\t\t\tinvolved_companies\n\t\t\t\tkeywords\n\t\t\t\tlanguage_supports\n\t\t\t\tmultiplayer_modes\n\t\t\t\tname\n\t\t\t\tparent_game\n\t\t\t\tplatforms\n\t\t\t\tplayer_perspectives\n\t\t\t\tports\n\t\t\t\trating\n\t\t\t\trating_count\n\t\t\t\trelease_dates\n\t\t\t\tremakes\n\t\t\t\tremasters\n\t\t\t\tscreenshots\n\t\t\t\tsimilar_games\n\t\t\t\tslug\n\t\t\t\tstandalone_expansions\n\t\t\t\tstatus\n\t\t\t\tstoryline\n\t\t\t\tsummary\n\t\t\t\ttags\n\t\t\t\tthemes\n\t\t\t\ttotal_rating\n\t\t\t\ttotal_rating_count\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t\tversion_parent\n\t\t\t\tversion_title\n\t\t\t\tvideos\n\t\t\t\twebsites\n\t\t\t}\n\t\t}\n\t}\n": types.GameDetailsDocument,
    "\n\tquery GamePlatforms {\n\t\tgamePlatforms {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}\n": types.GamePlatformsDocument,
};

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 *
 *
 * @example
 * ```ts
 * const query = graphql(`query GetUser($id: ID!) { user(id: $id) { name } }`);
 * ```
 *
 * The query argument is unknown!
 * Please regenerate the types.
 */
export function graphql(source: string): unknown;

/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tfragment MovieResult on MovieResult {\n\t\tadult\n\t\tbackdrop_path\n\t\tgenre_ids\n\t\tid\n\t\toriginal_language\n\t\toriginal_title\n\t\toverview\n\t\tpopularity\n\t\tposter_path\n\t\trelease_date\n\t\ttitle\n\t\tvideo\n\t\tvote_average\n\t\tvote_count\n\t}\n"): (typeof documents)["\n\tfragment MovieResult on MovieResult {\n\t\tadult\n\t\tbackdrop_path\n\t\tgenre_ids\n\t\tid\n\t\toriginal_language\n\t\toriginal_title\n\t\toverview\n\t\tpopularity\n\t\tposter_path\n\t\trelease_date\n\t\ttitle\n\t\tvideo\n\t\tvote_average\n\t\tvote_count\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tfragment ShowResult on ShowResult {\n\t\tbackdrop_path\n\t\tfirst_air_date\n\t\tgenre_ids\n\t\tid\n\t\tname\n\t\torigin_country\n\t\toriginal_language\n\t\toriginal_name\n\t\toverview\n\t\tpopularity\n\t\tposter_path\n\t\tvote_average\n\t\tvote_count\n\t}\n"): (typeof documents)["\n\tfragment ShowResult on ShowResult {\n\t\tbackdrop_path\n\t\tfirst_air_date\n\t\tgenre_ids\n\t\tid\n\t\tname\n\t\torigin_country\n\t\toriginal_language\n\t\toriginal_name\n\t\toverview\n\t\tpopularity\n\t\tposter_path\n\t\tvote_average\n\t\tvote_count\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation AddedMovie(\n\t\t$movieId: ID!\n\t\t$movieName: String!\n\t\t$watchStatus: WatchStatusTypes!\n\t) {\n\t\taddMovie(\n\t\t\tmovieId: $movieId\n\t\t\tmovieName: $movieName\n\t\t\twatchStatus: $watchStatus\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation AddedMovie(\n\t\t$movieId: ID!\n\t\t$movieName: String!\n\t\t$watchStatus: WatchStatusTypes!\n\t) {\n\t\taddMovie(\n\t\t\tmovieId: $movieId\n\t\t\tmovieName: $movieName\n\t\t\twatchStatus: $watchStatus\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation UpdatedMovie(\n\t\t$movieId: ID!\n\t\t$watchStatus: WatchStatusTypes!\n\t\t$movieRating: Int\n\t) {\n\t\tupdateMovie(\n\t\t\tmovieId: $movieId\n\t\t\twatchStatus: $watchStatus\n\t\t\tmovieRating: $movieRating\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdatedMovie(\n\t\t$movieId: ID!\n\t\t$watchStatus: WatchStatusTypes!\n\t\t$movieRating: Int\n\t) {\n\t\tupdateMovie(\n\t\t\tmovieId: $movieId\n\t\t\twatchStatus: $watchStatus\n\t\t\tmovieRating: $movieRating\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation DeletedMovie($movieId: ID!) {\n\t\tdeleteMovie(movieId: $movieId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation DeletedMovie($movieId: ID!) {\n\t\tdeleteMovie(movieId: $movieId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation AddedShow(\n\t\t$showId: ID!\n\t\t$showName: String!\n\t\t$watchStatus: WatchStatusTypes!\n\t\t$currentEpisode: Int\n\t) {\n\t\taddShow(\n\t\t\tshowId: $showId\n\t\t\tshowName: $showName\n\t\t\twatchStatus: $watchStatus\n\t\t\tcurrentEpisode: $currentEpisode\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation AddedShow(\n\t\t$showId: ID!\n\t\t$showName: String!\n\t\t$watchStatus: WatchStatusTypes!\n\t\t$currentEpisode: Int\n\t) {\n\t\taddShow(\n\t\t\tshowId: $showId\n\t\t\tshowName: $showName\n\t\t\twatchStatus: $watchStatus\n\t\t\tcurrentEpisode: $currentEpisode\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation UpdatedShow(\n\t\t$showId: ID!\n\t\t$watchStatus: WatchStatusTypes!\n\t\t$showRating: Int\n\t\t$currentEpisode: Int\n\t) {\n\t\tupdateShow(\n\t\t\tshowId: $showId\n\t\t\twatchStatus: $watchStatus\n\t\t\tshowRating: $showRating\n\t\t\tcurrentEpisode: $currentEpisode\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation UpdatedShow(\n\t\t$showId: ID!\n\t\t$watchStatus: WatchStatusTypes!\n\t\t$showRating: Int\n\t\t$currentEpisode: Int\n\t) {\n\t\tupdateShow(\n\t\t\tshowId: $showId\n\t\t\twatchStatus: $watchStatus\n\t\t\tshowRating: $showRating\n\t\t\tcurrentEpisode: $currentEpisode\n\t\t) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation DeletedShow($showId: ID!) {\n\t\tdeleteShow(showId: $showId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation DeletedShow($showId: ID!) {\n\t\tdeleteShow(showId: $showId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation VerifyUserEmail($userId: ID!) {\n\t\tverifyUserEmail(userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\tuserId\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation VerifyUserEmail($userId: ID!) {\n\t\tverifyUserEmail(userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\tuserId\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation SendVerificationEmail($userId: ID!) {\n\t\tsendVerificationEmail(userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation SendVerificationEmail($userId: ID!) {\n\t\tsendVerificationEmail(userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation RegisterUser($name: String!, $email: String!, $password: String!) {\n\t\tregisterUser(name: $name, email: $email, password: $password) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\tcreatedUser {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\temail\n\t\t\t\tpassword\n\t\t\t\timage\n\t\t\t\tcreated_at\n\t\t\t\temailVerified\n\t\t\t\tmovies {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tstatus\n\t\t\t\t\trating\n\t\t\t\t}\n\t\t\t\tshows {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tstatus\n\t\t\t\t\trating\n\t\t\t\t\tcurrent_episode\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation RegisterUser($name: String!, $email: String!, $password: String!) {\n\t\tregisterUser(name: $name, email: $email, password: $password) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\tcreatedUser {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\temail\n\t\t\t\tpassword\n\t\t\t\timage\n\t\t\t\tcreated_at\n\t\t\t\temailVerified\n\t\t\t\tmovies {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tstatus\n\t\t\t\t\trating\n\t\t\t\t}\n\t\t\t\tshows {\n\t\t\t\t\tid\n\t\t\t\t\tname\n\t\t\t\t\tstatus\n\t\t\t\t\trating\n\t\t\t\t\tcurrent_episode\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation SendForgotPasswordEmail($email: String!) {\n\t\tsendForgotPasswordEmail(email: $email) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation SendForgotPasswordEmail($email: String!) {\n\t\tsendForgotPasswordEmail(email: $email) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tmutation ChangePassword($userId: ID!, $newPassword: String!) {\n\t\tchangePassword(userId: $userId, newPassword: $newPassword) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n"): (typeof documents)["\n\tmutation ChangePassword($userId: ID!, $newPassword: String!) {\n\t\tchangePassword(userId: $userId, newPassword: $newPassword) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery PopularMovies($page: Int) {\n\t\tpopularMovies(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery PopularMovies($page: Int) {\n\t\tpopularMovies(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery SearchedMovies($q: String!, $page: Int) {\n\t\tsearchedMovies(q: $q, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery SearchedMovies($q: String!, $page: Int) {\n\t\tsearchedMovies(q: $q, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery MovieDetails($movieDetailsId: ID!) {\n\t\tmovieDetails(movieDetailsId: $movieDetailsId) {\n\t\t\tadult\n\t\t\tbackdrop_path\n\t\t\tgenres {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\thomepage\n\t\t\tid\n\t\t\timdb_id\n\t\t\toriginal_language\n\t\t\toriginal_title\n\t\t\toverview\n\t\t\tpopularity\n\t\t\tposter_path\n\t\t\tproduction_companies {\n\t\t\t\tid\n\t\t\t\tlogo_path\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t}\n\t\t\tproduction_countries {\n\t\t\t\tiso_3166_1\n\t\t\t\tname\n\t\t\t}\n\t\t\trelease_date\n\t\t\trevenue\n\t\t\truntime\n\t\t\tspoken_languages {\n\t\t\t\tenglish_name\n\t\t\t\tiso_639_1\n\t\t\t\tname\n\t\t\t}\n\t\t\tstatus\n\t\t\ttagline\n\t\t\ttitle\n\t\t\tvideo\n\t\t\tvote_average\n\t\t\tvote_count\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery MovieDetails($movieDetailsId: ID!) {\n\t\tmovieDetails(movieDetailsId: $movieDetailsId) {\n\t\t\tadult\n\t\t\tbackdrop_path\n\t\t\tgenres {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\thomepage\n\t\t\tid\n\t\t\timdb_id\n\t\t\toriginal_language\n\t\t\toriginal_title\n\t\t\toverview\n\t\t\tpopularity\n\t\t\tposter_path\n\t\t\tproduction_companies {\n\t\t\t\tid\n\t\t\t\tlogo_path\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t}\n\t\t\tproduction_countries {\n\t\t\t\tiso_3166_1\n\t\t\t\tname\n\t\t\t}\n\t\t\trelease_date\n\t\t\trevenue\n\t\t\truntime\n\t\t\tspoken_languages {\n\t\t\t\tenglish_name\n\t\t\t\tiso_639_1\n\t\t\t\tname\n\t\t\t}\n\t\t\tstatus\n\t\t\ttagline\n\t\t\ttitle\n\t\t\tvideo\n\t\t\tvote_average\n\t\t\tvote_count\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery PopularAnimeMovies($page: Int) {\n\t\tpopularAnimeMovies(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery PopularAnimeMovies($page: Int) {\n\t\tpopularAnimeMovies(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery TrendingMovies($timeWindow: TimeWindowTypes!, $page: Int) {\n\t\ttrendingMovies(timeWindow: $timeWindow, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery TrendingMovies($timeWindow: TimeWindowTypes!, $page: Int) {\n\t\ttrendingMovies(timeWindow: $timeWindow, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery TopRatedMovies($page: Int) {\n\t\ttopRatedMovies(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery TopRatedMovies($page: Int) {\n\t\ttopRatedMovies(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery RecommendedMovies($recommendedMoviesId: ID!, $page: Int) {\n\t\trecommendedMovies(recommendedMoviesId: $recommendedMoviesId, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery RecommendedMovies($recommendedMoviesId: ID!, $page: Int) {\n\t\trecommendedMovies(recommendedMoviesId: $recommendedMoviesId, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery MovieReviews($movieReviewsId: ID!, $page: Int) {\n\t\tmovieReviews(id: $movieReviewsId, page: $page) {\n\t\t\tid\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tauthor\n\t\t\t\tauthor_details {\n\t\t\t\t\tname\n\t\t\t\t\tusername\n\t\t\t\t\tavatar_path\n\t\t\t\t\trating\n\t\t\t\t}\n\t\t\t\tcontent\n\t\t\t\tcreated_at\n\t\t\t\tid\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery MovieReviews($movieReviewsId: ID!, $page: Int) {\n\t\tmovieReviews(id: $movieReviewsId, page: $page) {\n\t\t\tid\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tauthor\n\t\t\t\tauthor_details {\n\t\t\t\t\tname\n\t\t\t\t\tusername\n\t\t\t\t\tavatar_path\n\t\t\t\t\trating\n\t\t\t\t}\n\t\t\t\tcontent\n\t\t\t\tcreated_at\n\t\t\t\tid\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery MoviesInTheatres($page: Int) {\n\t\tmoviesInTheatres(page: $page) {\n\t\t\tdates {\n\t\t\t\tmaximum\n\t\t\t\tminimum\n\t\t\t}\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery MoviesInTheatres($page: Int) {\n\t\tmoviesInTheatres(page: $page) {\n\t\t\tdates {\n\t\t\t\tmaximum\n\t\t\t\tminimum\n\t\t\t}\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery PopularMoviesByGenre($page: Int, $genre: MovieGenreTypes!) {\n\t\tpopularMoviesByGenre(page: $page, genre: $genre) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery PopularMoviesByGenre($page: Int, $genre: MovieGenreTypes!) {\n\t\tpopularMoviesByGenre(page: $page, genre: $genre) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery TopRatedMoviesByGenre($page: Int, $genre: MovieGenreTypes!) {\n\t\ttopRatedMoviesByGenre(page: $page, genre: $genre) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery TopRatedMoviesByGenre($page: Int, $genre: MovieGenreTypes!) {\n\t\ttopRatedMoviesByGenre(page: $page, genre: $genre) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery PopularShows($page: Int) {\n\t\tpopularShows(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery PopularShows($page: Int) {\n\t\tpopularShows(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery SearchedShows($q: String!, $page: Int) {\n\t\tsearchedShows(q: $q, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery SearchedShows($q: String!, $page: Int) {\n\t\tsearchedShows(q: $q, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery ShowDetails($showDetailsId: ID!) {\n\t\tshowDetails(showDetailsId: $showDetailsId) {\n\t\t\tadult\n\t\t\tbackdrop_path\n\t\t\tcreated_by {\n\t\t\t\tid\n\t\t\t\tcredit_id\n\t\t\t\tname\n\t\t\t\tgender\n\t\t\t\tprofile_path\n\t\t\t}\n\t\t\tepisode_run_time\n\t\t\tfirst_air_date\n\t\t\tgenres {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\thomepage\n\t\t\tid\n\t\t\tin_production\n\t\t\tlanguages\n\t\t\tlast_air_date\n\t\t\tlast_episode_to_air {\n\t\t\t\tair_date\n\t\t\t\tepisode_number\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\toverview\n\t\t\t\tproduction_code\n\t\t\t\truntime\n\t\t\t\tseason_number\n\t\t\t\tshow_id\n\t\t\t\tstill_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t\tname\n\t\t\tnetworks {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tlogo_path\n\t\t\t\torigin_country\n\t\t\t}\n\t\t\tnumber_of_episodes\n\t\t\tnumber_of_seasons\n\t\t\torigin_country\n\t\t\toriginal_language\n\t\t\toriginal_name\n\t\t\toverview\n\t\t\tpopularity\n\t\t\tposter_path\n\t\t\tproduction_companies {\n\t\t\t\tid\n\t\t\t\tlogo_path\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t}\n\t\t\tproduction_countries {\n\t\t\t\tiso_3166_1\n\t\t\t\tname\n\t\t\t}\n\t\t\tseasons {\n\t\t\t\tair_date\n\t\t\t\tepisode_count\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\toverview\n\t\t\t\tposter_path\n\t\t\t\tseason_number\n\t\t\t}\n\t\t\tspoken_languages {\n\t\t\t\tenglish_name\n\t\t\t\tiso_639_1\n\t\t\t\tname\n\t\t\t}\n\t\t\tstatus\n\t\t\ttagline\n\t\t\ttype\n\t\t\tvote_average\n\t\t\tvote_count\n\t\t\tnext_episode_to_air {\n\t\t\t\tair_date\n\t\t\t\tepisode_number\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\toverview\n\t\t\t\tproduction_code\n\t\t\t\truntime\n\t\t\t\tseason_number\n\t\t\t\tshow_id\n\t\t\t\tstill_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery ShowDetails($showDetailsId: ID!) {\n\t\tshowDetails(showDetailsId: $showDetailsId) {\n\t\t\tadult\n\t\t\tbackdrop_path\n\t\t\tcreated_by {\n\t\t\t\tid\n\t\t\t\tcredit_id\n\t\t\t\tname\n\t\t\t\tgender\n\t\t\t\tprofile_path\n\t\t\t}\n\t\t\tepisode_run_time\n\t\t\tfirst_air_date\n\t\t\tgenres {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t}\n\t\t\thomepage\n\t\t\tid\n\t\t\tin_production\n\t\t\tlanguages\n\t\t\tlast_air_date\n\t\t\tlast_episode_to_air {\n\t\t\t\tair_date\n\t\t\t\tepisode_number\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\toverview\n\t\t\t\tproduction_code\n\t\t\t\truntime\n\t\t\t\tseason_number\n\t\t\t\tshow_id\n\t\t\t\tstill_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t\tname\n\t\t\tnetworks {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tlogo_path\n\t\t\t\torigin_country\n\t\t\t}\n\t\t\tnumber_of_episodes\n\t\t\tnumber_of_seasons\n\t\t\torigin_country\n\t\t\toriginal_language\n\t\t\toriginal_name\n\t\t\toverview\n\t\t\tpopularity\n\t\t\tposter_path\n\t\t\tproduction_companies {\n\t\t\t\tid\n\t\t\t\tlogo_path\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t}\n\t\t\tproduction_countries {\n\t\t\t\tiso_3166_1\n\t\t\t\tname\n\t\t\t}\n\t\t\tseasons {\n\t\t\t\tair_date\n\t\t\t\tepisode_count\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\toverview\n\t\t\t\tposter_path\n\t\t\t\tseason_number\n\t\t\t}\n\t\t\tspoken_languages {\n\t\t\t\tenglish_name\n\t\t\t\tiso_639_1\n\t\t\t\tname\n\t\t\t}\n\t\t\tstatus\n\t\t\ttagline\n\t\t\ttype\n\t\t\tvote_average\n\t\t\tvote_count\n\t\t\tnext_episode_to_air {\n\t\t\t\tair_date\n\t\t\t\tepisode_number\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\toverview\n\t\t\t\tproduction_code\n\t\t\t\truntime\n\t\t\t\tseason_number\n\t\t\t\tshow_id\n\t\t\t\tstill_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery PopularAnimeShows($page: Int) {\n\t\tpopularAnimeShows(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery PopularAnimeShows($page: Int) {\n\t\tpopularAnimeShows(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery TrendingShows($timeWindow: TimeWindowTypes!, $page: Int) {\n\t\ttrendingShows(timeWindow: $timeWindow, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery TrendingShows($timeWindow: TimeWindowTypes!, $page: Int) {\n\t\ttrendingShows(timeWindow: $timeWindow, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery TopRatedShows($page: Int) {\n\t\ttopRatedShows(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery TopRatedShows($page: Int) {\n\t\ttopRatedShows(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery RecommendedShows($recommendedShowsId: ID!, $page: Int) {\n\t\trecommendedShows(recommendedShowsId: $recommendedShowsId, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery RecommendedShows($recommendedShowsId: ID!, $page: Int) {\n\t\trecommendedShows(recommendedShowsId: $recommendedShowsId, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery ShowReviews($showReviewsId: ID!, $page: Int) {\n\t\tshowReviews(id: $showReviewsId, page: $page) {\n\t\t\tid\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tauthor\n\t\t\t\tauthor_details {\n\t\t\t\t\tname\n\t\t\t\t\tusername\n\t\t\t\t\tavatar_path\n\t\t\t\t\trating\n\t\t\t\t}\n\t\t\t\tcontent\n\t\t\t\tcreated_at\n\t\t\t\tid\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery ShowReviews($showReviewsId: ID!, $page: Int) {\n\t\tshowReviews(id: $showReviewsId, page: $page) {\n\t\t\tid\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tauthor\n\t\t\t\tauthor_details {\n\t\t\t\t\tname\n\t\t\t\t\tusername\n\t\t\t\t\tavatar_path\n\t\t\t\t\trating\n\t\t\t\t}\n\t\t\t\tcontent\n\t\t\t\tcreated_at\n\t\t\t\tid\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery PopularShowsByGenre($page: Int, $genre: ShowGenreTypes!) {\n\t\tpopularShowsByGenre(page: $page, genre: $genre) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery PopularShowsByGenre($page: Int, $genre: ShowGenreTypes!) {\n\t\tpopularShowsByGenre(page: $page, genre: $genre) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery TopRatedShowsByGenre($genre: ShowGenreTypes!, $page: Int) {\n\t\ttopRatedShowsByGenre(genre: $genre, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery TopRatedShowsByGenre($genre: ShowGenreTypes!, $page: Int) {\n\t\ttopRatedShowsByGenre(genre: $genre, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tbackdrop_path\n\t\t\t\tfirst_air_date\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery PopularPeople($page: Int) {\n\t\tpopularPeople(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for {\n\t\t\t\t\tadult\n\t\t\t\t\tbackdrop_path\n\t\t\t\t\tgenre_ids\n\t\t\t\t\tid\n\t\t\t\t\tmedia_type\n\t\t\t\t\toriginal_language\n\t\t\t\t\toriginal_title\n\t\t\t\t\toverview\n\t\t\t\t\tposter_path\n\t\t\t\t\trelease_date\n\t\t\t\t\ttitle\n\t\t\t\t\tvideo\n\t\t\t\t\tvote_average\n\t\t\t\t\tvote_count\n\t\t\t\t}\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery PopularPeople($page: Int) {\n\t\tpopularPeople(page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for {\n\t\t\t\t\tadult\n\t\t\t\t\tbackdrop_path\n\t\t\t\t\tgenre_ids\n\t\t\t\t\tid\n\t\t\t\t\tmedia_type\n\t\t\t\t\toriginal_language\n\t\t\t\t\toriginal_title\n\t\t\t\t\toverview\n\t\t\t\t\tposter_path\n\t\t\t\t\trelease_date\n\t\t\t\t\ttitle\n\t\t\t\t\tvideo\n\t\t\t\t\tvote_average\n\t\t\t\t\tvote_count\n\t\t\t\t}\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery PersonDetails($personDetailsId: ID!) {\n\t\tpersonDetails(personDetailsId: $personDetailsId) {\n\t\t\tadult\n\t\t\talso_known_as\n\t\t\tbiography\n\t\t\tbirthday\n\t\t\tdeathday\n\t\t\tgender\n\t\t\thomepage\n\t\t\tid\n\t\t\timdb_id\n\t\t\tknown_for_department\n\t\t\tname\n\t\t\tplace_of_birth\n\t\t\tpopularity\n\t\t\tprofile_path\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery PersonDetails($personDetailsId: ID!) {\n\t\tpersonDetails(personDetailsId: $personDetailsId) {\n\t\t\tadult\n\t\t\talso_known_as\n\t\t\tbiography\n\t\t\tbirthday\n\t\t\tdeathday\n\t\t\tgender\n\t\t\thomepage\n\t\t\tid\n\t\t\timdb_id\n\t\t\tknown_for_department\n\t\t\tname\n\t\t\tplace_of_birth\n\t\t\tpopularity\n\t\t\tprofile_path\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery SearchedPeople($q: String!, $page: Int) {\n\t\tsearchedPeople(q: $q, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for {\n\t\t\t\t\tadult\n\t\t\t\t\tbackdrop_path\n\t\t\t\t\tgenre_ids\n\t\t\t\t\tid\n\t\t\t\t\tmedia_type\n\t\t\t\t\toriginal_language\n\t\t\t\t\toriginal_title\n\t\t\t\t\toverview\n\t\t\t\t\tposter_path\n\t\t\t\t\trelease_date\n\t\t\t\t\ttitle\n\t\t\t\t\tvideo\n\t\t\t\t\tvote_average\n\t\t\t\t\tvote_count\n\t\t\t\t}\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery SearchedPeople($q: String!, $page: Int) {\n\t\tsearchedPeople(q: $q, page: $page) {\n\t\t\tpage\n\t\t\ttotal_pages\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for {\n\t\t\t\t\tadult\n\t\t\t\t\tbackdrop_path\n\t\t\t\t\tgenre_ids\n\t\t\t\t\tid\n\t\t\t\t\tmedia_type\n\t\t\t\t\toriginal_language\n\t\t\t\t\toriginal_title\n\t\t\t\t\toverview\n\t\t\t\t\tposter_path\n\t\t\t\t\trelease_date\n\t\t\t\t\ttitle\n\t\t\t\t\tvideo\n\t\t\t\t\tvote_average\n\t\t\t\t\tvote_count\n\t\t\t\t}\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery User($userId: ID!) {\n\t\tuser(id: $userId) {\n\t\t\tid\n\t\t\tname\n\t\t\temail\n\t\t\timage\n\t\t\tmovies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tstatus\n\t\t\t\trating\n\t\t\t}\n\t\t\tshows {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tstatus\n\t\t\t\trating\n\t\t\t\tcurrent_episode\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery User($userId: ID!) {\n\t\tuser(id: $userId) {\n\t\t\tid\n\t\t\tname\n\t\t\temail\n\t\t\timage\n\t\t\tmovies {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tstatus\n\t\t\t\trating\n\t\t\t}\n\t\t\tshows {\n\t\t\t\tid\n\t\t\t\tname\n\t\t\t\tstatus\n\t\t\t\trating\n\t\t\t\tcurrent_episode\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery UsersMovie($movieId: String!) {\n\t\tusersMovie(movieId: $movieId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery UsersMovie($movieId: String!) {\n\t\tusersMovie(movieId: $movieId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery UsersMovies {\n\t\tusersMovies {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery UsersMovies {\n\t\tusersMovies {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery UsersShow($showId: String!) {\n\t\tusersShow(showId: $showId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery UsersShow($showId: String!) {\n\t\tusersShow(showId: $showId) {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery UsersShows {\n\t\tusersShows {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery UsersShows {\n\t\tusersShows {\n\t\t\tid\n\t\t\tname\n\t\t\tstatus\n\t\t\trating\n\t\t\tcurrent_episode\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery PersonsKnownForMovie($personsKnownForMovieResId: ID!) {\n\t\tpersonsKnownForMovie(\n\t\t\tpersonsKnownForMovieResId: $personsKnownForMovieResId\n\t\t) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery PersonsKnownForMovie($personsKnownForMovieResId: ID!) {\n\t\tpersonsKnownForMovie(\n\t\t\tpersonsKnownForMovieResId: $personsKnownForMovieResId\n\t\t) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\toriginal_language\n\t\t\t\toriginal_title\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\trelease_date\n\t\t\t\ttitle\n\t\t\t\tvideo\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery PersonsKnownForShow($personsKnownForShowResId: ID!) {\n\t\tpersonsKnownForShow(personsKnownForShowResId: $personsKnownForShowResId) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tfirst_air_date\n\t\t\t\tname\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\tepisode_count\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tfirst_air_date\n\t\t\t\tname\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tepisode_count\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery PersonsKnownForShow($personsKnownForShowResId: ID!) {\n\t\tpersonsKnownForShow(personsKnownForShowResId: $personsKnownForShowResId) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tfirst_air_date\n\t\t\t\tname\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\tepisode_count\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tbackdrop_path\n\t\t\t\tgenre_ids\n\t\t\t\tid\n\t\t\t\torigin_country\n\t\t\t\toriginal_language\n\t\t\t\toriginal_name\n\t\t\t\toverview\n\t\t\t\tpopularity\n\t\t\t\tposter_path\n\t\t\t\tfirst_air_date\n\t\t\t\tname\n\t\t\t\tvote_average\n\t\t\t\tvote_count\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tepisode_count\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery ShowsCastCrew($showId: ID!) {\n\t\tshowsCastCrew(showId: $showId) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery ShowsCastCrew($showId: ID!) {\n\t\tshowsCastCrew(showId: $showId) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery MoviesCastCrew($movieId: ID!) {\n\t\tmoviesCastCrew(movieId: $movieId) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcast_id\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery MoviesCastCrew($movieId: ID!) {\n\t\tmoviesCastCrew(movieId: $movieId) {\n\t\t\tid\n\t\t\tcast {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcast_id\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery EpisodeDetails($showId: ID!, $seasonNum: Int!, $episodeNum: Int!) {\n\t\tepisodeDetails(\n\t\t\tshowId: $showId\n\t\t\tseasonNum: $seasonNum\n\t\t\tepisodeNum: $episodeNum\n\t\t) {\n\t\t\tair_date\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t\tepisode_number\n\t\t\tguest_stars {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tname\n\t\t\toverview\n\t\t\tid\n\t\t\tproduction_code\n\t\t\truntime\n\t\t\tseason_number\n\t\t\tstill_path\n\t\t\tvote_average\n\t\t\tvote_count\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery EpisodeDetails($showId: ID!, $seasonNum: Int!, $episodeNum: Int!) {\n\t\tepisodeDetails(\n\t\t\tshowId: $showId\n\t\t\tseasonNum: $seasonNum\n\t\t\tepisodeNum: $episodeNum\n\t\t) {\n\t\t\tair_date\n\t\t\tcrew {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcredit_id\n\t\t\t\tdepartment\n\t\t\t\tjob\n\t\t\t}\n\t\t\tepisode_number\n\t\t\tguest_stars {\n\t\t\t\tadult\n\t\t\t\tgender\n\t\t\t\tid\n\t\t\t\tknown_for_department\n\t\t\t\tname\n\t\t\t\toriginal_name\n\t\t\t\tpopularity\n\t\t\t\tprofile_path\n\t\t\t\tcharacter\n\t\t\t\tcredit_id\n\t\t\t\torder\n\t\t\t}\n\t\t\tname\n\t\t\toverview\n\t\t\tid\n\t\t\tproduction_code\n\t\t\truntime\n\t\t\tseason_number\n\t\t\tstill_path\n\t\t\tvote_average\n\t\t\tvote_count\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery CheckEmailVerificationToken($token: String!, $userId: ID!) {\n\t\tcheckEmailVerificationToken(token: $token, userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery CheckEmailVerificationToken($token: String!, $userId: ID!) {\n\t\tcheckEmailVerificationToken(token: $token, userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery CheckForgotPasswordToken($token: String!, $userId: ID!) {\n\t\tcheckForgotPasswordToken(token: $token, userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery CheckForgotPasswordToken($token: String!, $userId: ID!) {\n\t\tcheckForgotPasswordToken(token: $token, userId: $userId) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\ttoken\n\t\t\tuserId\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery AccountVerified($email: String!) {\n\t\taccountVerified(email: $email) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\tid\n\t\t\temailVerified\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery AccountVerified($email: String!) {\n\t\taccountVerified(email: $email) {\n\t\t\terrors {\n\t\t\t\tmessage\n\t\t\t}\n\t\t\tid\n\t\t\temailVerified\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery EmailFromRedisToken($token: String!) {\n\t\temailFromRedisToken(token: $token)\n\t}\n"): (typeof documents)["\n\tquery EmailFromRedisToken($token: String!) {\n\t\temailFromRedisToken(token: $token)\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery SearchGames($q: String!, $limit: Int!, $page: Int!) {\n\t\tsearchGames(q: $q, limit: $limit, page: $page) {\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tid\n\t\t\t\tage_ratings\n\t\t\t\talternative_names\n\t\t\t\tartworks\n\t\t\t\tbundles\n\t\t\t\tcategory\n\t\t\t\tchecksum\n\t\t\t\tcollection\n\t\t\t\tcollections\n\t\t\t\tcover\n\t\t\t\tcoverUrl\n\t\t\t\tcreated_at\n\t\t\t\tdlcs\n\t\t\t\texpanded_games\n\t\t\t\texpansions\n\t\t\t\texternal_games\n\t\t\t\tfirst_release_date\n\t\t\t\tforks\n\t\t\t\tfranchise\n\t\t\t\tfranchises\n\t\t\t\tgame_engines\n\t\t\t\tgame_localizations\n\t\t\t\tgame_modes\n\t\t\t\tgenres\n\t\t\t\thypes\n\t\t\t\tinvolved_companies\n\t\t\t\tkeywords\n\t\t\t\tlanguage_supports\n\t\t\t\tmultiplayer_modes\n\t\t\t\tname\n\t\t\t\tparent_game\n\t\t\t\tplatforms\n\t\t\t\tplayer_perspectives\n\t\t\t\tports\n\t\t\t\trating\n\t\t\t\trating_count\n\t\t\t\trelease_dates\n\t\t\t\tremakes\n\t\t\t\tremasters\n\t\t\t\tscreenshots\n\t\t\t\tsimilar_games\n\t\t\t\tslug\n\t\t\t\tstandalone_expansions\n\t\t\t\tstatus\n\t\t\t\tstoryline\n\t\t\t\tsummary\n\t\t\t\ttags\n\t\t\t\tthemes\n\t\t\t\ttotal_rating\n\t\t\t\ttotal_rating_count\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t\tversion_parent\n\t\t\t\tversion_title\n\t\t\t\tvideos\n\t\t\t\twebsites\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery SearchGames($q: String!, $limit: Int!, $page: Int!) {\n\t\tsearchGames(q: $q, limit: $limit, page: $page) {\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tid\n\t\t\t\tage_ratings\n\t\t\t\talternative_names\n\t\t\t\tartworks\n\t\t\t\tbundles\n\t\t\t\tcategory\n\t\t\t\tchecksum\n\t\t\t\tcollection\n\t\t\t\tcollections\n\t\t\t\tcover\n\t\t\t\tcoverUrl\n\t\t\t\tcreated_at\n\t\t\t\tdlcs\n\t\t\t\texpanded_games\n\t\t\t\texpansions\n\t\t\t\texternal_games\n\t\t\t\tfirst_release_date\n\t\t\t\tforks\n\t\t\t\tfranchise\n\t\t\t\tfranchises\n\t\t\t\tgame_engines\n\t\t\t\tgame_localizations\n\t\t\t\tgame_modes\n\t\t\t\tgenres\n\t\t\t\thypes\n\t\t\t\tinvolved_companies\n\t\t\t\tkeywords\n\t\t\t\tlanguage_supports\n\t\t\t\tmultiplayer_modes\n\t\t\t\tname\n\t\t\t\tparent_game\n\t\t\t\tplatforms\n\t\t\t\tplayer_perspectives\n\t\t\t\tports\n\t\t\t\trating\n\t\t\t\trating_count\n\t\t\t\trelease_dates\n\t\t\t\tremakes\n\t\t\t\tremasters\n\t\t\t\tscreenshots\n\t\t\t\tsimilar_games\n\t\t\t\tslug\n\t\t\t\tstandalone_expansions\n\t\t\t\tstatus\n\t\t\t\tstoryline\n\t\t\t\tsummary\n\t\t\t\ttags\n\t\t\t\tthemes\n\t\t\t\ttotal_rating\n\t\t\t\ttotal_rating_count\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t\tversion_parent\n\t\t\t\tversion_title\n\t\t\t\tvideos\n\t\t\t\twebsites\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery UsersGames {\n\t\tusersGames {\n\t\t\tid\n\t\t\tname\n\t\t\trating\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery UsersGames {\n\t\tusersGames {\n\t\t\tid\n\t\t\tname\n\t\t\trating\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery GameDetails($gameDetailsId: ID!) {\n\t\tgameDetails(gameDetailsId: $gameDetailsId) {\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tid\n\t\t\t\tage_ratings\n\t\t\t\talternative_names\n\t\t\t\tartworks\n\t\t\t\tbundles\n\t\t\t\tcategory\n\t\t\t\tchecksum\n\t\t\t\tcollection\n\t\t\t\tcollections\n\t\t\t\tcover\n\t\t\t\tcoverUrl\n\t\t\t\tcreated_at\n\t\t\t\tdlcs\n\t\t\t\texpanded_games\n\t\t\t\texpansions\n\t\t\t\texternal_games\n\t\t\t\tfirst_release_date\n\t\t\t\tforks\n\t\t\t\tfranchise\n\t\t\t\tfranchises\n\t\t\t\tgame_engines\n\t\t\t\tgame_localizations\n\t\t\t\tgame_modes\n\t\t\t\tgenres\n\t\t\t\thypes\n\t\t\t\tinvolved_companies\n\t\t\t\tkeywords\n\t\t\t\tlanguage_supports\n\t\t\t\tmultiplayer_modes\n\t\t\t\tname\n\t\t\t\tparent_game\n\t\t\t\tplatforms\n\t\t\t\tplayer_perspectives\n\t\t\t\tports\n\t\t\t\trating\n\t\t\t\trating_count\n\t\t\t\trelease_dates\n\t\t\t\tremakes\n\t\t\t\tremasters\n\t\t\t\tscreenshots\n\t\t\t\tsimilar_games\n\t\t\t\tslug\n\t\t\t\tstandalone_expansions\n\t\t\t\tstatus\n\t\t\t\tstoryline\n\t\t\t\tsummary\n\t\t\t\ttags\n\t\t\t\tthemes\n\t\t\t\ttotal_rating\n\t\t\t\ttotal_rating_count\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t\tversion_parent\n\t\t\t\tversion_title\n\t\t\t\tvideos\n\t\t\t\twebsites\n\t\t\t}\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GameDetails($gameDetailsId: ID!) {\n\t\tgameDetails(gameDetailsId: $gameDetailsId) {\n\t\t\ttotal_results\n\t\t\tresults {\n\t\t\t\tid\n\t\t\t\tage_ratings\n\t\t\t\talternative_names\n\t\t\t\tartworks\n\t\t\t\tbundles\n\t\t\t\tcategory\n\t\t\t\tchecksum\n\t\t\t\tcollection\n\t\t\t\tcollections\n\t\t\t\tcover\n\t\t\t\tcoverUrl\n\t\t\t\tcreated_at\n\t\t\t\tdlcs\n\t\t\t\texpanded_games\n\t\t\t\texpansions\n\t\t\t\texternal_games\n\t\t\t\tfirst_release_date\n\t\t\t\tforks\n\t\t\t\tfranchise\n\t\t\t\tfranchises\n\t\t\t\tgame_engines\n\t\t\t\tgame_localizations\n\t\t\t\tgame_modes\n\t\t\t\tgenres\n\t\t\t\thypes\n\t\t\t\tinvolved_companies\n\t\t\t\tkeywords\n\t\t\t\tlanguage_supports\n\t\t\t\tmultiplayer_modes\n\t\t\t\tname\n\t\t\t\tparent_game\n\t\t\t\tplatforms\n\t\t\t\tplayer_perspectives\n\t\t\t\tports\n\t\t\t\trating\n\t\t\t\trating_count\n\t\t\t\trelease_dates\n\t\t\t\tremakes\n\t\t\t\tremasters\n\t\t\t\tscreenshots\n\t\t\t\tsimilar_games\n\t\t\t\tslug\n\t\t\t\tstandalone_expansions\n\t\t\t\tstatus\n\t\t\t\tstoryline\n\t\t\t\tsummary\n\t\t\t\ttags\n\t\t\t\tthemes\n\t\t\t\ttotal_rating\n\t\t\t\ttotal_rating_count\n\t\t\t\tupdated_at\n\t\t\t\turl\n\t\t\t\tversion_parent\n\t\t\t\tversion_title\n\t\t\t\tvideos\n\t\t\t\twebsites\n\t\t\t}\n\t\t}\n\t}\n"];
/**
 * The graphql function is used to parse GraphQL queries into a document that can be used by GraphQL clients.
 */
export function graphql(source: "\n\tquery GamePlatforms {\n\t\tgamePlatforms {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}\n"): (typeof documents)["\n\tquery GamePlatforms {\n\t\tgamePlatforms {\n\t\t\tid\n\t\t\tname\n\t\t}\n\t}\n"];

export function graphql(source: string) {
  return (documents as any)[source] ?? {};
}

export type DocumentType<TDocumentNode extends DocumentNode<any, any>> = TDocumentNode extends DocumentNode<  infer TType,  any>  ? TType  : never;