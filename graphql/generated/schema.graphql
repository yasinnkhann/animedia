### This file was generated by Nexus Schema
### Do not make changes to this file directly


"""
The `BigInt` scalar type represents non-fractional signed whole numeric values.
"""
scalar BigInt

"""
A date-time string at UTC, such as 2007-12-03T10:15:30Z, compliant with the `date-time` format outlined in section 5.6 of the RFC 3339 profile of the ISO 8601 standard for representation of dates and times using the Gregorian calendar.
"""
scalar DateTime

type EpisodeDetails {
  air_date: String
  crew: [ShowsCrewModel]
  episode_number: Int
  guest_stars: [ShowsCastModel]
  id: Int
  name: String
  overview: String
  production_code: String
  runtime: Int
  season_number: Int
  still_path: String
  vote_average: Float
  vote_count: Int
}

"""
The `JSONObject` scalar type represents JSON objects as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSONObject @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type KnownForResult {
  adult: Boolean
  backdrop_path: String
  genre_ids: [Int]
  id: Int
  media_type: String
  original_language: String
  original_title: String
  overview: String
  poster_path: String
  release_date: String
  title: String
  video: Boolean
  vote_average: Float
  vote_count: Int
}

type MovieDetailsGenre {
  id: Int!
  name: String!
}

type MovieDetailsProdCompany {
  id: Int!
  logo_path: String
  name: String!
  origin_country: String!
}

type MovieDetailsProdCountry {
  iso_3166_1: String!
  name: String!
}

type MovieDetailsRes {
  adult: Boolean!
  backdrop_path: String
  genres: [MovieDetailsGenre!]!
  homepage: String!
  id: Int!
  imdb_id: String
  original_language: String!
  original_title: String!
  overview: String!
  popularity: Float!
  poster_path: String
  production_companies: [MovieDetailsProdCompany]!
  production_countries: [MovieDetailsProdCountry]!
  release_date: String
  revenue: BigInt
  runtime: Int
  spoken_languages: [MovieDetailsSpokenLang]!
  status: String!
  tagline: String!
  title: String!
  video: Boolean
  vote_average: Float!
  vote_count: Int!
}

type MovieDetailsSpokenLang {
  english_name: String!
  iso_639_1: String!
  name: String!
}

enum MovieGenreTypes {
  Action
  Adventure
  Animation
  Comedy
  Crime
  Documentary
  Drama
  Family
  Fantasy
  History
  Horror
  Music
  Mystery
  Romance
  Science
  TV
  Thriller
  War
  Western
}

type MovieResult {
  adult: Boolean!
  backdrop_path: String
  genre_ids: [Int]!
  id: Int!
  original_language: String!
  original_title: String!
  overview: String!
  popularity: Float!
  poster_path: String
  release_date: String
  title: String!
  video: Boolean!
  vote_average: Float!
  vote_count: Int!
}

type MovieReviewAuthorDetails {
  avatar_path: String
  name: String!
  rating: Float
  username: String!
}

type MovieReviewsRes {
  id: Int!
  page: Int!
  results: [MovieReviewsResult]!
  total_pages: Int!
  total_results: Int!
}

type MovieReviewsResult {
  author: String!
  author_details: MovieReviewAuthorDetails!
  content: String!
  created_at: String!
  id: String!
  updated_at: String!
  url: String!
}

type MoviesCastCrewRes {
  cast: [MoviesCastModel]
  crew: [MoviesCrewModel]
  id: Int
}

type MoviesCastModel {
  adult: Boolean
  cast_id: Int
  character: String
  credit_id: String
  gender: Int
  id: Int
  known_for_department: String
  name: String
  order: Int
  original_name: String
  popularity: Float
  profile_path: String
}

type MoviesCrewModel {
  adult: Boolean
  credit_id: String
  department: String
  gender: Int
  id: Int
  job: String
  known_for_department: String
  name: String
  original_name: String
  popularity: Float
  profile_path: String
}

type MoviesInTheatresRes {
  dates: TheatreDates!
  page: String!
  results: [MovieResult]!
  total_pages: Int!
  total_results: Int!
}

type MoviesRes {
  page: Int!
  results: [MovieResult!]!
  total_pages: Int!
  total_results: Int!
}

type Mutation {
  addedMovie(movieId: ID!, movieName: String!, watchStatus: WatchStatusTypes!): UserMovie
  addedShow(currentEpisode: Int, showId: ID!, showName: String!, watchStatus: WatchStatusTypes!): UserShow
  deletedMovie(movieId: ID!): UserMovie
  deletedShow(showId: ID!): UserShow
  updatedMovie(movieId: ID!, movieRating: Int, watchStatus: WatchStatusTypes!): UserMovie
  updatedShow(currentEpisode: Int, showId: ID!, showRating: Int, watchStatus: WatchStatusTypes!): UserShow
}

type PeopleRes {
  page: Int!
  results: [PersonResult!]!
  total_pages: Int!
  total_results: Int!
}

type PersonDetailsRes {
  adult: Boolean
  also_known_as: [String]
  biography: String
  birthday: String
  deathday: String
  gender: Int
  homepage: String
  id: Int!
  imdb_id: String
  known_for_department: String
  name: String
  place_of_birth: String
  popularity: Float
  profile_path: String
}

type PersonResult {
  adult: Boolean!
  gender: Int!
  id: Int!
  known_for: [KnownForResult!]!
  known_for_department: String
  name: String!
  popularity: Float!
  profile_path: String
}

type PersonsKnownForMovieCast {
  adult: Boolean!
  backdrop_path: String
  character: String
  credit_id: ID
  genre_ids: [Int]!
  id: Int!
  order: Int
  original_language: String!
  original_title: String!
  overview: String!
  popularity: Float!
  poster_path: String
  release_date: String
  title: String!
  video: Boolean!
  vote_average: Float!
  vote_count: Int!
}

type PersonsKnownForMovieCrew {
  adult: Boolean!
  backdrop_path: String
  credit_id: ID
  department: String
  genre_ids: [Int]!
  id: Int!
  job: String
  original_language: String!
  original_title: String!
  overview: String!
  popularity: Float!
  poster_path: String
  release_date: String
  title: String!
  video: Boolean!
  vote_average: Float!
  vote_count: Int!
}

type PersonsKnownForMovieRes {
  cast: [PersonsKnownForMovieCast]!
  crew: [PersonsKnownForMovieCrew]!
  id: Int
}

type PersonsKnownForShowCast {
  adult: Boolean!
  backdrop_path: String
  character: String
  credit_id: ID
  episode_count: Int
  first_air_date: String
  genre_ids: [Int]!
  id: Int!
  name: String!
  origin_country: [String]!
  original_language: String!
  original_name: String!
  overview: String!
  popularity: Float!
  poster_path: String
  vote_average: Float!
  vote_count: Int!
}

type PersonsKnownForShowCrew {
  adult: Boolean!
  backdrop_path: String
  credit_id: ID
  department: String
  episode_count: Int
  first_air_date: String
  genre_ids: [Int]!
  id: Int!
  job: String
  name: String!
  origin_country: [String]!
  original_language: String!
  original_name: String!
  overview: String!
  popularity: Float!
  poster_path: String
  vote_average: Float!
  vote_count: Int!
}

type PersonsKnownForShowRes {
  cast: [PersonsKnownForShowCast]!
  crew: [PersonsKnownForShowCrew]!
  id: Int
}

type Query {
  episodeDetails(episodeNum: Int!, seasonNum: Int!, showId: Int!): EpisodeDetails
  id: Int
  movieDetails(movieDetailsId: Int!): MovieDetailsRes!
  movieReviews(id: Int!, page: Int): MovieReviewsRes!
  moviesCastCrew(movieId: Int!): MoviesCastCrewRes
  moviesInTheatres(page: Int): MoviesInTheatresRes!
  personDetails(id: Int!): PersonDetailsRes!
  personsKnownForMovieRes(id: Int!): PersonsKnownForMovieRes!
  personsKnownForShowRes(id: Int!): PersonsKnownForShowRes!
  popularAnimeMovies(page: Int): MoviesRes!
  popularAnimeShows(page: Int): ShowsRes!
  popularMovies(page: Int): MoviesRes!
  popularMoviesByGenre(genre: MovieGenreTypes!, page: Int): MoviesRes!
  popularPeople(page: Int): PeopleRes!
  popularShows(page: Int): ShowsRes!
  popularShowsByGenre(genre: ShowGenreTypes!, page: Int): ShowsRes!
  recommendedMovies(page: Int, recommendedMoviesId: Int!): MoviesRes!
  recommendedShows(page: Int, recommendedShowsId: Int!): ShowsRes!
  searchedMovies(page: Int, q: String!): MoviesRes!
  searchedPeople(page: Int, q: String!): PeopleRes!
  searchedShows(page: Int, q: String!): ShowsRes!
  showDetails(showDetailsId: Int!): ShowDetailsRes!
  showReviews(id: Int!, page: Int): ShowReviewRes!
  showsCastCrew(showId: Int!): ShowsCastCrewRes
  topRatedMovies(page: Int): MoviesRes!
  topRatedMoviesByGenre(genre: MovieGenreTypes!, page: Int): MoviesRes!
  topRatedShows(page: Int): ShowsRes!
  topRatedShowsByGenre(genre: ShowGenreTypes!, page: Int): ShowsRes!
  trendingMovies(page: Int, timeWindow: TimeWindowTypes!): MoviesRes!
  trendingShows(page: Int, timeWindow: TimeWindowTypes!): ShowsRes!
  user: User
  usersMovie(movieId: String!): UserMovie
  usersMovies: [UserMovie]
  usersShow(showId: String!): UserShow
  usersShows: [UserShow]
}

type ShowDetailsCountry {
  iso_3166_1: String!
  name: String!
}

type ShowDetailsCreatedBy {
  credit_id: String
  gender: Int
  id: Int
  name: String
  profile_path: String
}

type ShowDetailsGenre {
  id: Int!
  name: String!
}

type ShowDetailsLastEpToAir {
  air_date: String
  episode_number: Int!
  id: Int!
  name: String!
  overview: String!
  production_code: String!
  runtime: Int
  season_number: Int!
  show_id: Int!
  still_path: String
  vote_average: Float!
  vote_count: Int!
}

type ShowDetailsNetwork {
  id: Int!
  logo_path: String
  name: String!
  origin_country: String!
}

type ShowDetailsNextEpToAir {
  air_date: String
  episode_number: Int!
  id: Int!
  name: String!
  overview: String!
  production_code: String!
  runtime: Int
  season_number: Int!
  show_id: Int!
  still_path: String
  vote_average: Float!
  vote_count: Int!
}

type ShowDetailsProdCompany {
  id: Int!
  logo_path: String
  name: String!
  origin_country: String!
}

type ShowDetailsRes {
  adult: Boolean!
  backdrop_path: String
  created_by: [ShowDetailsCreatedBy]!
  episode_run_time: [Int]!
  first_air_date: String
  genres: [ShowDetailsGenre!]!
  homepage: String!
  id: Int!
  in_production: Boolean!
  languages: [String]!
  last_air_date: String
  last_episode_to_air: ShowDetailsLastEpToAir
  name: String!
  networks: [ShowDetailsNetwork!]!
  next_episode_to_air: ShowDetailsNextEpToAir
  number_of_episodes: Int!
  number_of_seasons: Int!
  origin_country: [String]!
  original_language: String!
  original_name: String!
  overview: String!
  popularity: Float!
  poster_path: String
  production_companies: [ShowDetailsProdCompany]!
  production_countries: [ShowDetailsCountry]!
  seasons: [ShowDetailsSeason]!
  spoken_languages: [ShowDetailsSpokenLang]!
  status: String!
  tagline: String!
  type: String!
  vote_average: Float!
  vote_count: Int!
}

type ShowDetailsSeason {
  air_date: String
  episode_count: Int!
  id: Int!
  name: String!
  overview: String!
  poster_path: String
  season_number: Int!
}

type ShowDetailsSpokenLang {
  english_name: String!
  iso_639_1: String!
  name: String!
}

enum ShowGenreTypes {
  Action_AMPERSAND_Adventure
  Animation
  Comedy
  Crime
  Documentary
  Drama
  Family
  Kids
  Mystery
  News
  Reality
  SciDASHFi_AMPERSAND_Fantasy
  Soap
  Talk
  War_AMPERSAND_Politics
  Western
}

type ShowResult {
  backdrop_path: String
  first_air_date: String
  genre_ids: [Int]!
  id: Int!
  name: String!
  origin_country: [String]!
  original_language: String!
  original_name: String!
  overview: String!
  popularity: Float!
  poster_path: String
  vote_average: Float!
  vote_count: Int!
}

type ShowReviewAuthorDetails {
  avatar_path: String
  name: String!
  rating: Float
  username: String!
}

type ShowReviewRes {
  id: Int!
  page: Int!
  results: [ShowReviewResult]!
  total_pages: Int!
  total_results: Int!
}

type ShowReviewResult {
  author: String!
  author_details: ShowReviewAuthorDetails!
  content: String!
  created_at: String!
  id: String!
  updated_at: String!
  url: String!
}

type ShowsCastCrewRes {
  cast: [ShowsCastModel]
  crew: [ShowsCrewModel]
  id: Int
}

type ShowsCastModel {
  adult: Boolean
  character: String
  credit_id: String
  gender: Int
  id: Int
  known_for_department: String
  name: String
  order: Int
  original_name: String
  popularity: Float
  profile_path: String
}

type ShowsCrewModel {
  adult: Boolean
  credit_id: String
  department: String
  gender: Int
  id: Int
  job: String
  known_for_department: String
  name: String
  original_name: String
  popularity: Float
  profile_path: String
}

type ShowsRes {
  page: Int!
  results: [ShowResult!]!
  total_pages: Int!
  total_results: Int!
}

type TheatreDates {
  maximum: String!
  minimum: String!
}

enum TimeWindowTypes {
  day
  week
}

type User {
  email: String
  id: ID
  image: String
  movies: [UserMovie]
  name: String
  shows: [UserShow]
}

type UserMovie {
  id: ID
  name: String
  rating: Int
  status: WatchStatusTypes
}

type UserShow {
  current_episode: Int
  id: ID
  name: String
  rating: Int
  status: WatchStatusTypes
}

enum WatchStatusTypes {
  COMPLETED
  DROPPED
  NOT_WATCHING
  ON_HOLD
  PLAN_TO_WATCH
  WATCHING
}